apiVersion: v1
kind: ServiceAccount
metadata:
  name: thanos-query-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-query-frontend
  labels:
    name: thanos-query-frontend
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      targetPort: http
      name: http
  selector:
    app: thanos-query-frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query-frontend
  labels:
    name: thanos-query-frontend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: thanos-query-frontend
  template:
    metadata:
      labels:
        app: thanos-query-frontend
    spec:
      serviceAccount: thanos-query-frontend
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - thanos-query-frontend
                topologyKey: kubernetes.io/hostname
              weight: 100
      securityContext:
        fsGroup: 1001
      containers:
        - name: query-frontend
          image: thanos
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
          args:
            - query-frontend
            - --log.level=debug
            - --log.format=logfmt
            - --http-address=0.0.0.0:9090
            - --query-frontend.downstream-url=http://thanos-query:10902
            - --query-frontend.log-queries-longer-than=5s
            - --query-range.split-interval=12h
            - --labels.split-interval=12h
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
            httpGet:
              path: /-/healthy
              port: http
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
            httpGet:
              path: /-/ready
              port: http
          resources:
            limits: {}
            requests: {}